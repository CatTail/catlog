{"name":"Catlog","tagline":"CatTail's static blog generator, Transform markdown post into htmls, with a lot of other functions.","body":"## Introduction\r\nCatlog is a static site generator. It allow user to use markdown syntax to write post and publish it with html format. Catlog has a inner test server to allow you see post result after write it. It also support for self theme and plugin definition.\r\n\r\nLive demo [cattail.me](http://blog.cattail.me)\r\n\r\n## Installation\r\nSimply type `npm install -g catlogjs` in console.\r\n\r\n## Usage\r\nType `catlog -h` in console, it will tell you how to use catlog.\r\n```\r\nUsage: catlog.coffee [options] [command]\r\n\r\nCommands:\r\n\r\n  init                   initialize project\r\n  migrate <path>         migrate already exist markdown file into catlog accepted directory construct\r\n  post                   generate post\r\n  generate               generate assets and html files\r\n\r\nOptions:\r\n\r\n  -h, --help          output usage information\r\n  -V, --version       output the version number\r\n  -s --server [port]  start local server on port\r\n  -a --auto           watch for file change and auto update\r\n```\r\n\r\n### init\r\nGo to directory you want to create the blog, type `catlog init`, it will create  such directory structure `plugins  post  _post  settings.json  themes`. Change settings.json as you wish.\r\n\r\n### migrate\r\nIf you already have a lot of markdown post files and want to migrate them into catlog blog structure, using `catlog migrate <path>`. It will prompt lost meta information needed for every markdown files.\r\n\r\n### post\r\nWant to create an new post? Fine, using `catlog post`. For the reason that catlog blog structure contain the meta info of posts, do not change the directory structure without knowning what it means. `post` command will handle this properly for you.\r\n\r\n### generate\r\nWhen you finish writing post and want to see the result, using `catlog generate` to generate html files.\r\n\r\n### options\r\nIf you need local server add `--server` options, with `--auto` option added, change made in markdown file will auto re-generated into html.\r\n\r\n## theme\r\n### environment\r\n#### site\r\n* source\r\n* destination\r\n* theme_path\r\n* plugin_path\r\n* permalink_style\r\n* base_url\r\n* port\r\n* author\r\n* site_title\r\n* site_url\r\n* destination\r\n* theme\r\n* plugins\r\n* categories\r\n* posts\r\n\r\n#### post\r\n* src\r\n* title\r\n* category\r\n* date\r\n* time\r\n* author\r\n* year\r\n* month\r\n* day\r\n* permalink\r\n* heading\r\n* content\r\ncould have self-defined variables\r\n\r\n## plugin\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}